#!/bin/bash
set -e

echo "Managing pull request..."

# Push changes to remote
echo "Pushing changes to remote..."

# Ensure we have the latest remote references
echo "Fetching latest remote references..."
git fetch origin main || git fetch origin || true

git push -u origin "$BRANCH_NAME"

# Detect the default branch
DEFAULT_BRANCH=$(gh repo view --json defaultBranchRef -q '.defaultBranchRef.name' 2>/dev/null || echo "main")
echo "Default branch: $DEFAULT_BRANCH"

# Ensure we have the default branch locally
if ! git show-ref --verify --quiet "refs/heads/$DEFAULT_BRANCH"; then
    echo "Creating local $DEFAULT_BRANCH branch..."
    git checkout -b "$DEFAULT_BRANCH" "origin/$DEFAULT_BRANCH" || true
    git checkout "$BRANCH_NAME"
fi

# Check if PR already exists
EXISTING_PR=$(gh pr list --base "$DEFAULT_BRANCH" --head "$BRANCH_NAME" --json number --jq '.[0].number' || echo "")

if [ -n "$EXISTING_PR" ]; then
    echo "Pull request #$EXISTING_PR already exists, updating..."
    
    # Add a comment about the update
    gh pr comment "$EXISTING_PR" --body "🔄 **Updated with new changes**

The ledit agent has made additional changes based on the latest requirements.

Commit: $(git rev-parse --short HEAD)"
    
    PR_NUMBER="$EXISTING_PR"
    PR_URL=$(gh pr view "$EXISTING_PR" --json url -q '.url')
else
    echo "Creating new pull request..."
    
    # Create PR body
    PR_BODY="## 🤖 Automated Solution for Issue #$ISSUE_NUMBER

This pull request was automatically generated by the [ledit AI issue solver](https://github.com/alantheprice/ledit) to resolve issue #$ISSUE_NUMBER.

### 📋 Issue Summary
Please see issue #$ISSUE_NUMBER for full context.

### 🔧 Changes Made
The AI agent analyzed the issue description, comments, and any attached images to implement this solution.

$(git log --oneline "origin/$DEFAULT_BRANCH..$BRANCH_NAME" 2>/dev/null | sed 's/^/- /' || git log --oneline -5 | sed 's/^/- /')

### 📁 Files Changed
\`\`\`
$(git diff --name-status "origin/$DEFAULT_BRANCH...$BRANCH_NAME" 2>/dev/null || git diff --name-status HEAD~ 2>/dev/null || git status --porcelain)
\`\`\`

---
**Automated by**: [ledit-agent](https://github.com/alantheprice/ledit-agent)
**Model**: $AI_MODEL via $AI_PROVIDER"

    # Add cost if available
    if [ -n "$LEDIT_COST" ] && [ "$LEDIT_COST" != "$0.00" ] && [ "$LEDIT_COST" != "$0.000000" ]; then
        PR_BODY="$PR_BODY
**Cost**: $LEDIT_COST"
    fi
    
    PR_BODY="$PR_BODY
**Issue**: Closes #$ISSUE_NUMBER"

    # Create the PR (without assignee to avoid errors in GitHub Actions)
    PR_OUTPUT=$(gh pr create \
        --title "fix: Resolve issue #$ISSUE_NUMBER" \
        --body "$PR_BODY" \
        --base "$DEFAULT_BRANCH" \
        --head "$BRANCH_NAME")
    
    # Extract PR number and URL
    PR_URL="$PR_OUTPUT"
    PR_NUMBER=$(echo "$PR_URL" | grep -oE '[0-9]+$')
fi

# Output results
echo "pr-number=$PR_NUMBER" >> $GITHUB_OUTPUT
echo "pr-url=$PR_URL" >> $GITHUB_OUTPUT

# Add comment to issue about PR status
if [ -n "$EXISTING_PR" ]; then
    # PR was updated, not created
    gh issue comment "$ISSUE_NUMBER" --body "🔄 I've updated pull request #$PR_NUMBER with new changes.

🔗 **Pull Request**: $PR_URL

Please review the latest changes and let me know if any adjustments are needed."
else
    # New PR was created
    gh issue comment "$ISSUE_NUMBER" --body "🎉 I've created pull request #$PR_NUMBER to address this issue.

🔗 **Pull Request**: $PR_URL

Please review the proposed changes and let me know if any adjustments are needed."
fi

echo "Pull request ready: $PR_URL"